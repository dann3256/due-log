// Code generated by ogen, DO NOT EDIT.

package openapi

import (
	"time"
)

type BearerAuth struct {
	Token string
	Roles []string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// GetRoles returns the value of Roles.
func (s *BearerAuth) GetRoles() []string {
	return s.Roles
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// SetRoles sets the value of Roles.
func (s *BearerAuth) SetRoles(val []string) {
	s.Roles = val
}

type BillResponse struct {
	ID         ID         `json:"id"`
	Name       Name       `json:"name"`
	Credit     Credit     `json:"credit"`
	CreditDate CreditDate `json:"credit_date"`
}

// GetID returns the value of ID.
func (s *BillResponse) GetID() ID {
	return s.ID
}

// GetName returns the value of Name.
func (s *BillResponse) GetName() Name {
	return s.Name
}

// GetCredit returns the value of Credit.
func (s *BillResponse) GetCredit() Credit {
	return s.Credit
}

// GetCreditDate returns the value of CreditDate.
func (s *BillResponse) GetCreditDate() CreditDate {
	return s.CreditDate
}

// SetID sets the value of ID.
func (s *BillResponse) SetID(val ID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *BillResponse) SetName(val Name) {
	s.Name = val
}

// SetCredit sets the value of Credit.
func (s *BillResponse) SetCredit(val Credit) {
	s.Credit = val
}

// SetCreditDate sets the value of CreditDate.
func (s *BillResponse) SetCreditDate(val CreditDate) {
	s.CreditDate = val
}

func (*BillResponse) createBillRes() {}

// Ref: #/components/schemas/Bills
type Bills struct {
	ID         int32     `json:"id"`
	Name       string    `json:"name"`
	Credit     int32     `json:"credit"`
	CreditDate time.Time `json:"credit_date"`
}

// GetID returns the value of ID.
func (s *Bills) GetID() int32 {
	return s.ID
}

// GetName returns the value of Name.
func (s *Bills) GetName() string {
	return s.Name
}

// GetCredit returns the value of Credit.
func (s *Bills) GetCredit() int32 {
	return s.Credit
}

// GetCreditDate returns the value of CreditDate.
func (s *Bills) GetCreditDate() time.Time {
	return s.CreditDate
}

// SetID sets the value of ID.
func (s *Bills) SetID(val int32) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Bills) SetName(val string) {
	s.Name = val
}

// SetCredit sets the value of Credit.
func (s *Bills) SetCredit(val int32) {
	s.Credit = val
}

// SetCreditDate sets the value of CreditDate.
func (s *Bills) SetCreditDate(val time.Time) {
	s.CreditDate = val
}

type CompanyNameResponse struct {
	Names []Name `json:"names"`
}

// GetNames returns the value of Names.
func (s *CompanyNameResponse) GetNames() []Name {
	return s.Names
}

// SetNames sets the value of Names.
func (s *CompanyNameResponse) SetNames(val []Name) {
	s.Names = val
}

func (*CompanyNameResponse) getCompanyNameRes() {}

type CompanyResponse struct {
	ID          ID          `json:"id"`
	Name        Name        `json:"name"`
	CreditLimit CreditLimit `json:"credit_limit"`
}

// GetID returns the value of ID.
func (s *CompanyResponse) GetID() ID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CompanyResponse) GetName() Name {
	return s.Name
}

// GetCreditLimit returns the value of CreditLimit.
func (s *CompanyResponse) GetCreditLimit() CreditLimit {
	return s.CreditLimit
}

// SetID sets the value of ID.
func (s *CompanyResponse) SetID(val ID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CompanyResponse) SetName(val Name) {
	s.Name = val
}

// SetCreditLimit sets the value of CreditLimit.
func (s *CompanyResponse) SetCreditLimit(val CreditLimit) {
	s.CreditLimit = val
}

func (*CompanyResponse) createCompanyRes() {}

// Ref: #/components/schemas/ConflictError
type ConflictError struct {
	Error   OptString `json:"error"`
	Message OptString `json:"message"`
}

// GetError returns the value of Error.
func (s *ConflictError) GetError() OptString {
	return s.Error
}

// GetMessage returns the value of Message.
func (s *ConflictError) GetMessage() OptString {
	return s.Message
}

// SetError sets the value of Error.
func (s *ConflictError) SetError(val OptString) {
	s.Error = val
}

// SetMessage sets the value of Message.
func (s *ConflictError) SetMessage(val OptString) {
	s.Message = val
}

func (*ConflictError) registerUserRes() {}

type CreateBillReq struct {
	Name       Name       `json:"name"`
	Credit     Credit     `json:"credit"`
	CreditDate CreditDate `json:"credit_date"`
}

// GetName returns the value of Name.
func (s *CreateBillReq) GetName() Name {
	return s.Name
}

// GetCredit returns the value of Credit.
func (s *CreateBillReq) GetCredit() Credit {
	return s.Credit
}

// GetCreditDate returns the value of CreditDate.
func (s *CreateBillReq) GetCreditDate() CreditDate {
	return s.CreditDate
}

// SetName sets the value of Name.
func (s *CreateBillReq) SetName(val Name) {
	s.Name = val
}

// SetCredit sets the value of Credit.
func (s *CreateBillReq) SetCredit(val Credit) {
	s.Credit = val
}

// SetCreditDate sets the value of CreditDate.
func (s *CreateBillReq) SetCreditDate(val CreditDate) {
	s.CreditDate = val
}

type CreateCompanyReq struct {
	Name        Name        `json:"name"`
	CreditLimit CreditLimit `json:"credit_limit"`
}

// GetName returns the value of Name.
func (s *CreateCompanyReq) GetName() Name {
	return s.Name
}

// GetCreditLimit returns the value of CreditLimit.
func (s *CreateCompanyReq) GetCreditLimit() CreditLimit {
	return s.CreditLimit
}

// SetName sets the value of Name.
func (s *CreateCompanyReq) SetName(val Name) {
	s.Name = val
}

// SetCreditLimit sets the value of CreditLimit.
func (s *CreateCompanyReq) SetCreditLimit(val CreditLimit) {
	s.CreditLimit = val
}

type Credit int

type CreditDate time.Time

type CreditLimit int

type Email string

// Ref: #/components/schemas/ForbiddenError
type ForbiddenError struct {
	Error   OptString `json:"error"`
	Message OptString `json:"message"`
}

// GetError returns the value of Error.
func (s *ForbiddenError) GetError() OptString {
	return s.Error
}

// GetMessage returns the value of Message.
func (s *ForbiddenError) GetMessage() OptString {
	return s.Message
}

// SetError sets the value of Error.
func (s *ForbiddenError) SetError(val OptString) {
	s.Error = val
}

// SetMessage sets the value of Message.
func (s *ForbiddenError) SetMessage(val OptString) {
	s.Message = val
}

func (*ForbiddenError) loginRes() {}

type GetBillsOKApplicationJSON []Bills

func (*GetBillsOKApplicationJSON) getBillsRes() {}

type ID int32

// Ref: #/components/schemas/InternalServerError
type InternalServerError struct {
	Error   OptString `json:"error"`
	Message OptString `json:"message"`
}

// GetError returns the value of Error.
func (s *InternalServerError) GetError() OptString {
	return s.Error
}

// GetMessage returns the value of Message.
func (s *InternalServerError) GetMessage() OptString {
	return s.Message
}

// SetError sets the value of Error.
func (s *InternalServerError) SetError(val OptString) {
	s.Error = val
}

// SetMessage sets the value of Message.
func (s *InternalServerError) SetMessage(val OptString) {
	s.Message = val
}

func (*InternalServerError) createBillRes()     {}
func (*InternalServerError) createCompanyRes()  {}
func (*InternalServerError) getBillsRes()       {}
func (*InternalServerError) getCompanyNameRes() {}
func (*InternalServerError) loginRes()          {}
func (*InternalServerError) registerUserRes()   {}

type LoginReq struct {
	Name         Name         `json:"name"`
	Email        Email        `json:"email"`
	PasswordHash PasswordHash `json:"password_hash"`
}

// GetName returns the value of Name.
func (s *LoginReq) GetName() Name {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *LoginReq) GetEmail() Email {
	return s.Email
}

// GetPasswordHash returns the value of PasswordHash.
func (s *LoginReq) GetPasswordHash() PasswordHash {
	return s.PasswordHash
}

// SetName sets the value of Name.
func (s *LoginReq) SetName(val Name) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *LoginReq) SetEmail(val Email) {
	s.Email = val
}

// SetPasswordHash sets the value of PasswordHash.
func (s *LoginReq) SetPasswordHash(val PasswordHash) {
	s.PasswordHash = val
}

type LoginResponse struct {
	// APIリクエストの際に使用するJWTアクセストークン。有効期限は短い。.
	AccessToken string `json:"accessToken"`
	// アクセストークンの有効期限が切れた際に、新しいトークンを再発行するために使用するトークン。有効期限は長い。.
	RefreshToken string `json:"refreshToken"`
}

// GetAccessToken returns the value of AccessToken.
func (s *LoginResponse) GetAccessToken() string {
	return s.AccessToken
}

// GetRefreshToken returns the value of RefreshToken.
func (s *LoginResponse) GetRefreshToken() string {
	return s.RefreshToken
}

// SetAccessToken sets the value of AccessToken.
func (s *LoginResponse) SetAccessToken(val string) {
	s.AccessToken = val
}

// SetRefreshToken sets the value of RefreshToken.
func (s *LoginResponse) SetRefreshToken(val string) {
	s.RefreshToken = val
}

func (*LoginResponse) loginRes() {}

type Name string

// Ref: #/components/schemas/NotFoundError
type NotFoundError struct {
	Error   OptString `json:"error"`
	Message OptString `json:"message"`
}

// GetError returns the value of Error.
func (s *NotFoundError) GetError() OptString {
	return s.Error
}

// GetMessage returns the value of Message.
func (s *NotFoundError) GetMessage() OptString {
	return s.Message
}

// SetError sets the value of Error.
func (s *NotFoundError) SetError(val OptString) {
	s.Error = val
}

// SetMessage sets the value of Message.
func (s *NotFoundError) SetMessage(val OptString) {
	s.Message = val
}

func (*NotFoundError) getBillsRes() {}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type PasswordHash string

type RegisterUserReq struct {
	Name         Name         `json:"name"`
	Email        Email        `json:"email"`
	PasswordHash PasswordHash `json:"password_hash"`
}

// GetName returns the value of Name.
func (s *RegisterUserReq) GetName() Name {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *RegisterUserReq) GetEmail() Email {
	return s.Email
}

// GetPasswordHash returns the value of PasswordHash.
func (s *RegisterUserReq) GetPasswordHash() PasswordHash {
	return s.PasswordHash
}

// SetName sets the value of Name.
func (s *RegisterUserReq) SetName(val Name) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *RegisterUserReq) SetEmail(val Email) {
	s.Email = val
}

// SetPasswordHash sets the value of PasswordHash.
func (s *RegisterUserReq) SetPasswordHash(val PasswordHash) {
	s.PasswordHash = val
}

// Ref: #/components/schemas/UnauthorizedError
type UnauthorizedError struct {
	Error   OptString `json:"error"`
	Message OptString `json:"message"`
}

// GetError returns the value of Error.
func (s *UnauthorizedError) GetError() OptString {
	return s.Error
}

// GetMessage returns the value of Message.
func (s *UnauthorizedError) GetMessage() OptString {
	return s.Message
}

// SetError sets the value of Error.
func (s *UnauthorizedError) SetError(val OptString) {
	s.Error = val
}

// SetMessage sets the value of Message.
func (s *UnauthorizedError) SetMessage(val OptString) {
	s.Message = val
}

func (*UnauthorizedError) loginRes() {}

type UserResponse struct {
	ID    ID    `json:"id"`
	Name  Name  `json:"name"`
	Email Email `json:"email"`
}

// GetID returns the value of ID.
func (s *UserResponse) GetID() ID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserResponse) GetName() Name {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *UserResponse) GetEmail() Email {
	return s.Email
}

// SetID sets the value of ID.
func (s *UserResponse) SetID(val ID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserResponse) SetName(val Name) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UserResponse) SetEmail(val Email) {
	s.Email = val
}

func (*UserResponse) registerUserRes() {}

// Ref: #/components/schemas/ValidationError
type ValidationError struct {
	Error   OptString `json:"error"`
	Message OptString `json:"message"`
}

// GetError returns the value of Error.
func (s *ValidationError) GetError() OptString {
	return s.Error
}

// GetMessage returns the value of Message.
func (s *ValidationError) GetMessage() OptString {
	return s.Message
}

// SetError sets the value of Error.
func (s *ValidationError) SetError(val OptString) {
	s.Error = val
}

// SetMessage sets the value of Message.
func (s *ValidationError) SetMessage(val OptString) {
	s.Message = val
}

func (*ValidationError) createBillRes()    {}
func (*ValidationError) createCompanyRes() {}
func (*ValidationError) loginRes()         {}
func (*ValidationError) registerUserRes()  {}
